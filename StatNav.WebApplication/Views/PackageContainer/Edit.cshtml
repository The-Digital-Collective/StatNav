@model StatNav.WebApplication.Models.PackageContainer

@{
    String action = ViewBag.Action;
}
<div class="row">
    <div class="col-md-6">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <h4>@action Package Container</h4>

            @Html.Partial("_SaveButton")
            <hr />
            @Html.Partial("_Confirmation")
            <p>&nbsp;</p>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            @if (action == "Edit")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => Model.Id, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.PackageContainerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PackageContainerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PackageContainerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.Type, "Persistent", new { htmlAttributes = new { @class = "form-control" } })
                    Persistent<br />
                    @Html.RadioButtonFor(model => model.Type, "Dynamic", new { htmlAttributes = new { @class = "form-control" } })
                    Dynamic<br />
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MetricModelStageId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("MetricModelStageId", new SelectList(ViewBag.Stages, "Id", "Title"), "Please Select...", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MetricModelStageId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>
        }
        @if (action == "Edit")
        {
            <div>
                @Html.ActionLink("Delete", "Delete", new { Id = Model.Id }, new { @class = "btn btn-danger" })

            </div>
        }
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
    <div class="col-md-6">
        <p>&nbsp;</p>
        @if (action == "Edit")
        {
            <h4>Marketing Asset Packages</h4>
            @Html.ActionLink("Create Marketing Asset Package for this Package Container", "Create", "MarketingAssetPackage", new { packageContainerId = Model.Id }, null)

            @Html.Partial("../MarketingAssetPackage/_list", Model.MarketingAssetPackages)
        }
    </div>
</div>