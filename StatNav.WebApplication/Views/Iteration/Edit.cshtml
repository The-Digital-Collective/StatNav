@model StatNav.WebApplication.Models.ExperimentIteration

@{
    String action = ViewBag.Action;
    ViewBag.Title = action + " Experiment Iteration";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group pull-right">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
        <h4>@ViewBag.Title</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        @if (action == "Edit")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Id, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.Raw(Model.Id)
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.ExperimentProgrammeId, "ExperimentProgrammeId", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("ExperimentProgrammeId", new SelectList(ViewBag.ExperimentProgrammes, "Id", "Name"), htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ExperimentProgrammeId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequiredDurationForSignificance, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequiredDurationForSignificance, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.RequiredDurationForSignificance, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IterationNumber, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.IterationNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IterationNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDateTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StartDateTime, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDateTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EndDateTime, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
